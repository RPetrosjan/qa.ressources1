<?xml version="1.0" encoding="UTF-8"?>

<project name="ActRessources" default="build">
    <property name="workspace" value="${project.basedir}" />
    <property name="dir.src" value="${project.basedir}/src" />
    <property name="dir.app" value="${project.basedir}/app" />
    <property name="dir.build" value="${project.basedir}/app/build" />
    <property environment="test" />

    <target name="build" depends="clean,sf.clean,prepare,sf.prepare,phplint,phploc,pdepend,phpcpd,phpdoc,phpunit">
        <echo msg="All analysis done." />
    </target>

    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${dir.build}/api" />
        <delete dir="${dir.build}/code-browser" />
        <delete dir="${dir.build}/coverage" />
        <delete dir="${dir.build}/logs" />
        <delete dir="${dir.build}/pdepend" />
        <delete dir="${dir.build}/docs/*" />
    </target>

    <target name="prepare" description="Prepare for build">
        <mkdir dir="${dir.build}/api" />
        <mkdir dir="${dir.build}/code-browser" />
        <mkdir dir="${dir.build}/coverage" />
        <mkdir dir="${dir.build}/logs" />
        <mkdir dir="${dir.build}/pdepend" />
    </target>

    <target name="sf.clean" description="Cleans up Symfony data">
        <delete file="${workspace}/composer.phar" />
        <delete file="${dir.app}/config/parameters.yml" />
        <delete dir="${dir.app}/cache" />
    </target>

    <target name="sf.prepare" description="Prepares Symfony data">
        <mkdir dir="${dir.app}/cache" />
        <echo msg="Setting testing parameter file..." />
        <exec command="php -c wget http://getcomposer.org/composer.phar" />
        <exec command="php composer.phar update" />
        <exec command="php app/console assets:install -n --no-debug web" />
        <exec command="php app/console assetic:dump -n --no-debug" />
        <copy file="${dir.app}/config/parameters_jenkins.yml" tofile="${dir.app}/config/parameters.yml" />
    </target>

    <target name="phplint" description="Check php syntax with lint">
        <phplint>
            <fileset dir="${dir.src}">
                <include name="*.php"/>
            </fileset>
        </phplint>
    </target>

    <target name="phploc" description="Measure project size using PHPLOC">
        <tstamp>
            <format property="check.date.time" pattern="%Y%m%d-%H%M%S" locale="en_US" />
        </tstamp>
        <phploc reportType="csv" reportName="phploc" reportDirectory="${dir.build}/logs" countTests="true">
            <fileset dir="${dir.src}">
                <include name="**/*.php" />
                <include name="*.php" />
            </fileset>
        </phploc>
    </target>

    <target name="pdepend" description="Calculate software metrics using PHP_Depend">
        <phpdepend>
            <fileset dir="${dir.src}">
                <include name="*.php" />
            </fileset>
            <logger type="jdepend-xml" outfile="${dir.build}/logs/jdepend.xml"/>
            <analyzer type="coderank-mode" value="method"/>
        </phpdepend>
    </target>

    <target name="phpmd" description="Perform project mess detection using PHPMD">
        <phpmd>
            <fileset dir="${dir.src}">
                <include name="*.php" />
            </fileset>
            <formatter type="xml" outfile="${dir.build}/logs/phpmd.xml"/>
        </phpmd>
    </target>

    <target name="phpcs" description="Find coding standard violations using PHP_CodeSniffer">
        <phpcodesniffer standard="Symfony2" showSniffs="true" showWarnings="true" format="checkstyle">
            <fileset dir="${dir.src}">
                <include name="*.php"/>
            </fileset>
            <formatter type="default" usefile="false"/>
            <formatter type="checkstyle" outfile="${dir.build}/logs/checkstyle.xml"/>
        </phpcodesniffer>
    </target>

    <target name="phpcpd" description="Find duplicate code using PHPCPD">
        <phpcpd>
            <fileset dir="${dir.src}">
                <include name="*.php" />
            </fileset>
            <formatter type="pmd" outfile="${dir.build}/logs/pmd-cpd.xml"/>
        </phpcpd>
    </target>

    <target name="phpdoc" description="Generate API documentation using phpDox">
        <phpdoc title="API Documentation"
                destdir="${dir.build}/docs"
                sourcecode="false"
                output="HTML:Smarty:PHP">
            <fileset dir="${dir.src}">
                <include name="*.php" />
            </fileset>
            <projdocfileset dir="${workspace}">
                <include name="README" />
                <include name="INSTALL" />
                <include name="CHANGELOG" />
            </projdocfileset>
        </phpdoc>
    </target>

    <target name="phpunit" description="Run unit tests with PHPUnit">
        <phpunit configuration="${dir.app}/phpunit.xml"/>
    </target>
</project>
