parameters:
    security.acl.permission.map.class: Sonata\AdminBundle\Security\Acl\Permission\AdminPermissionMap
    # optionally use a custom MaskBuilder
    # sonata.admin.security.mask.builder.class: Sonata\AdminBundle\Security\Acl\Permission\MaskBuilder

security:
    access_decision_manager:
        strategy: unanimous

    acl:
        connection: default
  
    encoders:
        Symfony\Component\Security\Core\User\User: plaintext
        FOS\UserBundle\Model\UserInterface: sha512

    role_hierarchy:
        ROLE_USER:        [ROLE_LDAP_LOGGED]
        ROLE_RP:          [ROLE_USER]
        ROLE_ADMIN:       [ROLE_USER, ROLE_RP, ROLE_SONATA_ADMIN]
        ROLE_SUPER_ADMIN: [ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]
        
    providers:
        fos_userbundle:
            id: fos_user.user_manager

    firewalls:
        # Disabling the security for the web debug toolbar, the profiler and Assetic.
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
            
        sf2gen:
            pattern:    /_sf2gencdt/.*
            security:  false

        admin:
            pattern:            ^/(fr|en)/admin(.*)
            context:            user
            form_login:
                provider:       fos_userbundle
                login_path:     sonata_user_admin_security_login
                check_path:     sonata_user_admin_security_check
                csrf_provider:  form.csrf_provider
            logout:
                path:           sonata_user_admin_security_logout
                target:         /
            anonymous:          true
            switch_user:
                role:           ROLE_ALLOWED_TO_SWITCH

        main:
            pattern:            ^/.*
            context:            user
            ldap:
                server:         %ldap_server%
                port:           %ldap_port%
                login_prefix:   %ldap_login_prefix%
                base_dn:        %ldap_base_dn%
                user_field:     %ldap_user_field%
            form_login:
                provider:       fos_userbundle
                login_path:     fos_user_security_login
                check_path:     fos_user_security_check
                csrf_provider:  form.csrf_provider
            logout:
                path:           fos_user_security_logout
                target:         /
            anonymous:          true
            switch_user:
                role:           ROLE_ALLOWED_TO_SWITCH
        
    access_control:
        # URL of FOSUserBundle which need to be available to anonymous users
        - { path: ^/(fr|en)/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/(fr|en)/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/(fr|en)/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Admin login page needs to be access without credential
        - { path: ^/(fr|en)/admin/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/(fr|en)/admin/logout$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/(fr|en)/admin/login_check$, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # REST page needs to be access without credential
        - { path: ^/(fr|en)/rest/data/select, role: IS_AUTHENTICATED_ANONYMOUSLY }

        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs
        - { path: ^/(fr|en)/admin, role: [ROLE_USER] } # at least ROLE_USER, but protected by ACL
        - { path: ^/.*, role: ROLE_USER }